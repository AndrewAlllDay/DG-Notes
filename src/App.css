#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* If you want to apply custom button colors for the light theme */
@media (prefers-color-scheme: light) {
  button {
    background-color: initial !important;
    /* reset background-color if necessary */
    /* Alternatively, define your own background color here */
    background-color: #4caf50;
    /* Or any color you want */
    color: white;
    /* Ensure the text color contrasts */
  }
}

/* --- Custom Modal Animations --- */

@keyframes overlayShow {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes overlayHide {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }

  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes contentHide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

/* These are the utility classes that will trigger the animations */
/* *** IMPORTANT CORRECTION MADE BELOW: Removed the backslash (escaped character) before the colon (:) *** */
/* The class name in HTML is `data-[state=open]:animate-overlayShow`
   So the CSS selector must directly match it, without escaping the colon. */

.data-\\[state\\=open\\]:animate-overlayShow[data-state='open'] {
  /* Corrected: no \ before : */
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.data-\\[state\\=closed\\]:animate-overlayHide[data-state='closed'] {
  /* Corrected: no \ before : */
  animation: overlayHide 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.data-\\[state\\=open\\]:animate-contentShow[data-state='open'] {
  /* Corrected: no \ before : */
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.data-\\[state\\=closed\\]:animate-contentHide[data-state='closed'] {
  /* Corrected: no \ before : */
  animation: contentHide 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
}